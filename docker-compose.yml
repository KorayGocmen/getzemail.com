version: "3"
services:
  web:
    image: web
    container_name: web
    build:
      context: .
      dockerfile: web/dockerfile
    environment:
      - PORT=80
    ports:
      - 80:80
      - 443:443
    volumes:
      - 'web:/web'
    networks:
      backend:
        aliases:
          - web
    stdin_open: true
    tty: true
    depends_on:
      - api
    restart: always

  api:
    image: api
    container_name: api
    build:
      context: .
      dockerfile: api/dockerfile
    ports:
      - 3000
    volumes:
      - api:/api
      - api_log:/var/log/api
    networks:
      backend:
        aliases:
          - api
      database:
        aliases:
          - api
    depends_on:
      - db
    restart: always
  
  db:
    image: db
    container_name: db
    build:
      context: .
      dockerfile: db/dockerfile
    env_file:
      - db/db.env
    volumes:
      - database_data:/var/lib/postgresql/data/
    networks:
      database:
        aliases:
          - db
          - database
    restart: always

  smtp:
    image: smtp
    container_name: smtp
    build:
      context: .
      dockerfile: smtp/dockerfile
    ports:
      - "25:25"
    volumes:
      - smtp:/smtp
      - smtp_log:/var/log/smtp
    sysctls:
      - net.core.somaxconn=65536
      - net.ipv4.tcp_max_tw_buckets=1440000
      - net.ipv4.ip_local_port_range=1024 65000
      - net.ipv4.tcp_fin_timeout=15
      - net.ipv4.tcp_window_scaling=1
      - net.ipv4.tcp_max_syn_backlog=3240000
    networks:
      backend:
        aliases:
          - smtp
      cache:
        aliases:
          - smtp
    depends_on:
      - api
      - redis
      - db
    restart: always

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis_data:/var/lib/redis
    networks:
      cache:
        aliases:
          - redis
    restart: always

networks:
  backend:
  database:
  cache:

volumes:
  web:
  api:
  api_log:
  smtp:
  smtp_log:
  database_data:
  redis_data:
